name: "UTBot Java: build and run tests"

on:  
  push:
    branches:
      - 'main'
      - 'unit-test-bot/r**'
  pull_request:
    branches:
      - 'main'
      - 'unit-test-bot/r**'

env:
  REGISTRY: ghcr.io

jobs:
#  build-and-run-tests:
#    uses: ./.github/workflows/build-and-run-tests-from-branch.yml
#    secrets: inherit


  publish-cli-image:
#    needs: build-and-run-tests
#    if: ${{ github.event_name == 'push' }}
    strategy:
      # The option forces to execute all jobs even though some of them have failed.
      fail-fast: false
      matrix:
        configuration:
          - image_name: utbot_java_cli
            directory: utbot-cli
            dockerfile_path: docker/Dockerfile_java_cli
            extra_options: ""
          - image_name: utbot_js_cli
            directory: utbot-cli-js
            dockerfile_path: docker/Dockerfile_javascript
            extra_options: "-PbuildType=ALL"
          - image_name: utbot_python_cli
            directory: utbot-cli-python
            dockerfile_path: docker/Dockerfile_Python
            extra_options: ""
    runs-on: ubuntu-20.04
    container: unittestbot/java-env:java11-zulu-jdk-gradle7.4.2-kotlinc1.7.0
    steps:
    - name: Print environment variables
      run: printenv

    - uses: actions/checkout@v3

    # "You can make an environment variable available to any subsequent steps in a workflow job by
    # defining or updating the environment variable and writing this to the GITHUB_ENV environment file."
    - name: Set environment variables
      run: |
        echo VERSION="$(date +%Y).$(date +%-m)" >> $GITHUB_ENV

    - name: Build UTBot CLI
      run: |
        cd ${{ matrix.configuration.directory }}
        gradle build --no-daemon --build-cache --no-parallel ${{ matrix.configuration.extra_options }} -Dorg.gradle.jvmargs=-Xmx2g -Dkotlin.daemon.jvm.options=-Xmx4g -x test -PsemVer=${{ env.VERSION }}
    - name: Set docker tag
      run:
        SHA=$(echo ${{ github.sha }} | cut -c 1-7)
        echo DOCKER_TAG="${VERSION}.$(date +%-d)-${SHA}" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        # fix of containerd issue, see https://github.com/containerd/containerd/issues/7972
        # could be removed as soon as new containerd version will be released and included in buildkit
        driver-opts: |
          image=moby/buildkit:v0.10.6

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ matrix.configuration.image_name }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ matrix.configuration.image_name }}-
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.configuration.image_name }}
        tags: |
          type=raw,value=${{ env.DOCKER_TAG }}
#    - name: Docker Buildx (build and push)
#      run: |
#        docker buildx build \
#          -f ${{ matrix.configuration.dockerfile_path }} \
#          --cache-from "type=local,src=/tmp/.buildx-cache" \
#          --cache-to "type=local,dest=/tmp/.buildx-cache-new" \
#          --tag ${{ steps.meta.outputs.tags }} \
#          --build-arg UTBOT_JAVA_CLI=${{ matrix.configuration.directory }}/build/libs/${{ matrix.configuration.directory }}-${{ env.VERSION }}.jar \
#          --push .
#      # Temp fix
#      # https://github.com/docker/build-push-action/issues/252
#      # https://github.com/moby/buildkit/issues/1896
#    - name: Move cache
#      run: |
#        rm -rf /tmp/.buildx-cache
#        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
