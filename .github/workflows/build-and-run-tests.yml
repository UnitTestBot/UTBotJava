name: "UTBot Java: build and run tests"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: utbot_java_cli
  DOCKERFILE_PATH: docker/Dockerfile_java_cli

jobs:
  build_and_run_tests:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'zulu'
        java-package: jdk+fx
        
    - uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 6.8
    
    - name: Set project version
      run: echo "VERSION="$(date +%Y).$(date +%-m)"" >> $GITHUB_ENV
        
    - name: Build and run tests in UTBot Java
      run: |
        export KOTLIN_HOME="/usr"
        gradle clean build --no-daemon -PsemVer=${{ env.VERSION }}
        
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: "**/build/test-results/**/*.xml"
        
    - name: Cache utbot-cli-${{ env.VERSION }}.jar
      if: ${{ github.event_name != 'pull_request' }}
      uses: actions/cache@v3
      with:
        path: utbot-cli/build/libs/utbot-cli-${{ env.VERSION }}.jar
        key: utbot-cli
        
    - name: Upload utbot-framework logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: utbot_framework_logs
        path: utbot-framework/logs/*
      
    - name: Upload utbot-framework tests report artifacts if tests have failed
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: utbot_framework_tests_report
        path: utbot-framework/build/reports/tests/test/*
        
        
  publish_cli_image:
    needs: build_and_run_tests
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
        
    - name: Set timezone
      uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Europe/Moscow"

    - name: Set environment variables
      run: |
        echo "COMMIT_SHORT_SHA="$(git rev-parse --short HEAD)"" >> $GITHUB_ENV
        echo "VERSION="$(date +%Y).$(date +%-m)"" >> $GITHUB_ENV
        
    - uses: actions/cache@v3
      with:
        path: utbot-cli/build/libs/utbot-cli-${{ env.VERSION }}.jar
        key: utbot-cli
        
    - name: Set docker tag
      run:
        echo "DOCKER_TAG="$(date +%Y).$(date +%-m).$(date +%-d)-${{ env.COMMIT_SHORT_SHA }}"" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
          
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ env.DOCKER_TAG }}
          
    - name: Docker Buildx (build and push)
      run: |
        docker buildx build \
          -f ${{ env.DOCKERFILE_PATH }} \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache-new" \
          --tag ${{ steps.meta.outputs.tags }} \
          --build-arg UTBOT_JAVA_CLI=utbot-cli/build/libs/utbot-cli-${{ env.VERSION }}.jar \
          --push .       
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
