name: "UTBot Java: night statistics monitoring"

on:
   schedule:
     - cron: '0 0 * * *'

env:
  monitoring_properties: monitoring/monitoring.properties
  output_stats: stats.json
  history_file: monitoring/history.json
  coverage_graph_file: monitoring/coverage_graph.png
  quantitative_graph_file: monitoring/quantitative_graph.png
  KOTLIN_HOME: /usr

jobs:
  build_and_run_monitoring:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'
          java-package: jdk+fx
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 6.8
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install matplotlib
        run: pip install matplotlib

      - name: Build and run monitoring UTBot Java
        run: |
          gradle :utbot-junit-contest:monitoringJar
          java -jar \
            -Dutbot.monitoring.settings.path=$monitoring_properties \
            utbot-junit-contest/build/libs/monitoring.jar \
            $output_stats

      - name: Update history and render graphs
        run: |
          python monitoring/draw_stats_graphs.py \
            $history_file \
            $output_stats \
            $coverage_graph_file \
            $quantitative_graph_file

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%d-%m-%Y')"

      - name: Commit and push graphs and statistics
        uses: actions-js/push@master
        with:
          message: 'night-monitoring-${{ steps.date.outputs.date }}'
          directory: './monitoring'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: logs/utbot.log

      - name: Upload statistics
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: statistics
          path: ${{ env.output_stats }}
