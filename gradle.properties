kotlin.code.style=official

#Project Type
# - Community: for Java + Spring + Python (IC supported features)
# - Ultimate:  for Java + Spring + Python (IU supported features) + JavaScript + Go
projectType=Ultimate

communityEdition = Community
ultimateEdition=Ultimate

# IU, IC, PC, PY
# IC for AndroidStudio
ideType=IC
ideVersion=232.8660.185
# ALL, NOJS
buildType=NOJS

pythonIde=IC,IU,PC,PY
jsIde=IU,PY,WS
jsBuild=ALL
goIde=IU

# In order to run Android Studio instead of IntelliJ Community, specify the path to your Android Studio installation
#androidStudioPath=your_path_to_android_studio

# Version numbers: https://plugins.jetbrains.com/plugin/7322-python-community-edition/versions
pythonCommunityPluginVersion=232.8660.185
# Version numbers: https://plugins.jetbrains.com/plugin/631-python/versions
pythonUltimatePluginVersion=232.8660.185
# Version numbers: https://plugins.jetbrains.com/plugin/9568-go/versions
goPluginVersion=232.8660.142

junit5Version=5.8.2
junit4Version=4.13.2
junit4PlatformVersion=1.9.0
# NOTE: Mockito versions 5+ are not compatible with Java 8: https://www.davidvlijmincx.com/posts/upgrade-to-mockito-5
mockitoVersion=4.11.0
mockitoInlineVersion=4.11.0
ksmtVersion=0.4.3
sootVersion=4.4.0-FORK-2
kotlinVersion=1.8.0
log4j2Version=2.13.3
coroutinesVersion=1.6.3
collectionsVersion=0.3.4
# after updating plugin version you should manually bump corresponding versions in plugin
# as they cannot be set from properties
# utbot-intellij/build.gradle.kts
# utbot-rd/build.gradle
# utbot-rider/build.gradle.kts
intellijPluginVersion=1.13.1
# every time you bump rd version:
# 1. regenerate all models
# 2. check if rider plugin works
rdVersion=2023.1.2
# to enable - add -PincludeRiderInBuild=true in build CLI
includeRiderInBuild=false
jacocoVersion=0.8.8
commonsLangVersion=3.11
commonsIoVersion=2.8.0
kotlinLoggingVersion=1.8.3
ktorVersion=1.4.1
cliktVersion=3.2.0
guavaVersion=30.0-jre
apacheCommonsExecVersion=1.2
apacheCommonsTextVersion=1.9
rgxgenVersion=1.3
antlrVersion=4.9.2
kryoVersion=5.4.0
kryoSerializersVersion=0.45
asmVersion=9.2
testNgVersion=7.6.0
kamlVersion=0.51.0
jacksonVersion=2.12.3
kotlinxSerializationVersion=1.5.0
slf4jVersion=1.7.36
eclipseAetherVersion=1.1.0
mavenWagonVersion=3.5.1
mavenPluginApiVersion=3.8.5
mavenPluginToolsVersion=3.6.4
mavenPluginTestingVersion=3.3.0
mavenResolverApiVersion=1.8.0
sisuPlexusVersion=0.3.5
javaCppVersion=1.5.3
jsoupVersion=1.7.2
djlApiVersion=0.17.0
pytorchNativeVersion=1.9.1
shadowJarVersion=7.1.2
openblasVersion=0.3.10-1.5.4
arpackNgVersion=3.7.0-1.5.4
commonsLoggingVersion=1.2
commonsIOVersion=2.11.0
javaxVersion=2.2
jakartaVersion=3.1.0

# Python support
utbotMypyRunnerVersion=0.2.11

# use latest Java 8 compaitable Spring and Spring Boot versions
springVersion=5.3.28
springBootVersion=2.7.13
springSecurityVersion=5.8.5

# configuration for build server
#
# the following options are passed to gradle command explicitly (see appropriate workflow):
#   --build-cache (the same as org.gradle.caching=true)
#   --no-daemon (the same as org.gradle.daemon=false)
#
# read about options precedence at: https://docs.gradle.org/current/userguide/build_environment.html
org.gradle.jvmargs="-Xmx6g"

# configuration for local compilation - much faster
# overriden by some parameters in CI, read below about each option
#
# overrided by --no-daemon
org.gradle.daemon=true
# overrided by -Dkotlin.daemon.jvm.options=-Xmx4g
kotlin.daemon.jvm.options=-Xmx4g
# overrided by --no-parallel
org.gradle.parallel=true
# not overrided, we use cache in CI as well
org.gradle.caching=true
# there is no need to override the option below because parallel execution is disabled by --no-parallel
org.gradle.workers.max=8
