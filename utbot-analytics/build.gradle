configurations {
    mlmodels
}

def osName = System.getProperty('os.name').toLowerCase().split()[0]
if (osName == "mac") osName = "macosx"
String classifier = osName + "-x86_64"

evaluationDependsOn(':utbot-framework')
compileTestJava.dependsOn tasks.getByPath(':utbot-framework:testClasses')

dependencies {
    api project(":utbot-framework")
    testImplementation project(':utbot-sample')
    testImplementation group: 'junit', name: 'junit', version: junit4Version

    implementation(group: 'org.unittestbot.soot', name: 'soot-utbot-fork', version: sootVersion) {
        exclude group:'com.google.guava', module:'guava'
    }
    implementation group: 'com.github.haifengl', name: 'smile-kotlin', version: haifenglSmileVersion
    implementation group: 'com.github.haifengl', name: 'smile-plot', version: haifenglSmileVersion
    implementation group: 'com.github.haifengl', name: 'smile-core', version: haifenglSmileVersion
    implementation group: 'com.github.haifengl', name: 'smile-interpolation', version: haifenglSmileVersion
    implementation group: 'io.github.microutils', name: 'kotlin-logging', version: kotlinLoggingVersion
    implementation group: 'com.google.code.gson', name: 'gson', version: gsonVersion

    implementation group: 'org.bytedeco', name: 'arpack-ng', version: arpackNgVersion, classifier: "$classifier"
    implementation group: 'org.bytedeco', name: 'openblas', version: openblasVersion, classifier: "$classifier"

    implementation group: 'tech.tablesaw', name: 'tablesaw-core', version: tablesawVersion
    implementation group: 'tech.tablesaw', name: 'tablesaw-jsplot', version: tablesawVersion

    implementation group: 'org.apache.commons', name: 'commons-text', version: apacheCommonsTextVersion
    implementation group: 'com.github.javaparser', name: 'javaparser-core', version: javaparserVersion

    testImplementation project(':utbot-testing')
    testImplementation project(':utbot-framework').sourceSets.test.output
}

test {
    minHeapSize = "128m"
    maxHeapSize = "3072m"

    jvmArgs '-XX:MaxHeapSize=3072m'

    useJUnitPlatform() {
        excludeTags 'slow', 'IntegrationTest'
    }
}

processResources {
    configurations.mlmodels.resolvedConfiguration.resolvedArtifacts.each { artifact ->
        from(zipTree(artifact.getFile())) {
            into "models"
        }
    }
}

jar {
    dependsOn classes
    manifest {
        attributes 'Main-Class': 'org.utbot.QualityAnalysisKt'
    }

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    zip64 = true
}