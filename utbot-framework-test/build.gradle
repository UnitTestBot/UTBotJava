apply from: "${parent.projectDir}/gradle/include/jvm-project.gradle"

compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
        freeCompilerArgs += ["-Xallow-result-return-type", "-Xsam-conversions=class"]
    }
}


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_11
}

//noinspection GroovyAssignabilityCheck
repositories {
    flatDir {
        dirs 'dist'
    }
}

//noinspection GroovyAssignabilityCheck
configurations {
    z3native
}

dependencies {
    api project(':utbot-api')
    api project(':utbot-fuzzers')
    api project(':utbot-core')
    api project(':utbot-instrumentation')
    api project(':utbot-summary')
    api project(':utbot-framework-api')

    implementation(project(":utbot-framework"))
    testImplementation project(':utbot-sample')
    testImplementation project(":utbot-framework").sourceSets.test.output
    testImplementation project(":utbot-core").sourceSets.test.output

    implementation "com.github.UnitTestBot:soot:${soot_commit_hash}"

    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: jackson_version
    implementation group: 'org.sosy-lab', name: 'javasmt-solver-z3', version: javasmt_solver_z3_version
    implementation group: 'com.github.curious-odd-man', name: 'rgxgen', version: rgxgen_version
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2_version
    implementation group: 'io.github.microutils', name: 'kotlin-logging', version: kotlin_logging_version
    implementation group: 'org.jacoco', name: 'org.jacoco.report', version: jacoco_version
    implementation group: 'org.apache.commons', name: 'commons-text', version: apache_commons_text_version
    // we need this for construction mocks from composite models
    implementation group: 'org.mockito', name: 'mockito-core', version: '4.2.0'

    // To use JUnit4, comment out JUnit5 and uncomment JUnit4 dependencies here. Please also check "test" section
    // testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.8.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.1'

    // used for testing code generation
    testImplementation group: 'commons-io', name: 'commons-io', version: commons_io_version
    testImplementation group: 'junit', name: 'junit', version: junit4_version
    testImplementation group: 'org.junit.platform', name: 'junit-platform-console-standalone', version: junit4_platform_version
    testImplementation group: 'org.antlr', name: 'antlr4', version: antlr_version
    testImplementation group: 'org.mockito', name: 'mockito-core', version: mockito_version
    testImplementation group: 'org.testng', name: 'testng', version: testng_version
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: mockito_inline_version
    testImplementation group: 'com.google.guava', name: 'guava', version: guava_version

    testImplementation group: 'org.mockito', name: 'mockito-inline', version: mockito_inline_version
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2_version

    z3native group: 'com.microsoft.z3', name: 'z3-native-win64', version: z3_version, ext: 'zip'
    z3native group: 'com.microsoft.z3', name: 'z3-native-linux64', version: z3_version, ext: 'zip'
    z3native group: 'com.microsoft.z3', name: 'z3-native-osx', version: z3_version, ext: 'zip'
}


test {

    minHeapSize = "128m"
    maxHeapSize = "2048m"

    jvmArgs '-XX:MaxHeapSize=2048m'

    // To use JUnit4, comment out useJUnitPlatform and uncomment useJUnit. Please also check "dependencies" section
    //useJUnit()
    useJUnitPlatform() {
        excludeTags 'slow', 'IntegrationTest'
    }
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9009'
    }
}
