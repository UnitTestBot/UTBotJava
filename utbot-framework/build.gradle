plugins {
  id 'maven-publish'
}

apply from: "${parent.projectDir}/gradle/include/jvm-project.gradle"

repositories {
    flatDir {
        dirs 'dist'
    }
}

configurations {
    z3native
    fetchInstrumentationJar
}

dependencies {
    fetchInstrumentationJar project(path: ':utbot-instrumentation', configuration:'instrumentationArchive')

    api project(':utbot-core')
    api project(':utbot-summary')
    implementation 'junit:junit:4.13.1'
    api project(':utbot-framework-api')

    implementation "com.github.UnitTestBot:soot:${soot_commit_hash}"

    api group: 'com.google.guava', name: 'guava', version: guava_version

    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: jackson_version
    implementation group: 'org.sosy-lab', name: 'javasmt-solver-z3', version: javasmt_solver_z3_version
    implementation group: 'com.github.curious-odd-man', name: 'rgxgen', version: rgxgen_version
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2_version
    implementation group: 'io.github.microutils', name: 'kotlin-logging', version: kotlin_logging_version
    implementation group: 'org.jacoco', name: 'org.jacoco.report', version: jacoco_version
    implementation group: 'org.apache.commons', name: 'commons-text', version: apache_commons_text_version
    // we need this for construction mocks from composite models
    implementation group: 'org.mockito', name: 'mockito-core', version: '4.2.0'
    api project(':utbot-api')
    api project(':utbot-instrumentation')
    api project(':utbot-fuzzers')

    testImplementation project(':utbot-summary')
    testImplementation project(':utbot-sample')
    testImplementation project(':utbot-analytics')

    // used for testing code generation
    testImplementation group: 'commons-io', name: 'commons-io', version: commons_io_version
    testImplementation group: 'junit', name: 'junit', version: junit4_version
    testImplementation group: 'org.junit.platform', name: 'junit-platform-console-standalone', version: junit4_platform_version
    testImplementation group: 'org.antlr', name: 'antlr4', version: antlr_version
    testImplementation group: 'org.mockito', name: 'mockito-core', version: mockito_version
    testImplementation group: 'org.testng', name: 'testng', version: testng_version
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: mockito_inline_version

    testCompile group: 'org.mockito', name: 'mockito-inline', version: mockito_inline_version
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2_version

    z3native group: 'com.microsoft.z3', name: 'z3-native-win64', version: z3_version, ext: 'zip'
    z3native group: 'com.microsoft.z3', name: 'z3-native-linux64', version: z3_version, ext: 'zip'
    z3native group: 'com.microsoft.z3', name: 'z3-native-osx', version: z3_version, ext: 'zip'
}

processResources {
    configurations.z3native.resolvedConfiguration.resolvedArtifacts.each { artifact ->
        from(zipTree(artifact.getFile())) {
            into "lib/x64"
        }
    }

    // We will extract this jar in `ChildProcessRunner` class.
    from(configurations.fetchInstrumentationJar) {
        into "instrumentation-lib"
    }
}

test {
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9009'
    }
}

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/UnitTestBot/UTBotJava"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }
}
