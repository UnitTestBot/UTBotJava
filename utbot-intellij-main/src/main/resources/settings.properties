# Copyright (c) 2024 utbot.org
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Setting to disable coroutines debug explicitly.
# Set it to false if debug info is required.
#
# Default value is [true]
#disableCoroutinesDebug=true

#
# Make `true` for interactive mode (like Intellij plugin). If `false` UTBot can apply certain optimizations.
#
# Default value is [true]
#classfilesCanChange=true

#
# Timeout for Z3 solver.check calls.
# Set it to 0 to disable timeout.
#
# Default value is [1000]
#checkSolverTimeoutMillis=1000

#
# Timeout for symbolic execution
#
# Default value is [60000]
#utBotGenerationTimeoutInMillis=60000

#
# Random seed in path selector.
# Set null to disable random.
#
# Default value is [42]
#seedInPathSelector=42

#
# Type of path selector.
#
# COVERED_NEW_SELECTOR: [CoveredNewSelector]
# INHERITORS_SELECTOR: [InheritorsSelector]
# BFS_SELECTOR: [BFSSelector]
# SUBPATH_GUIDED_SELECTOR: [SubpathGuidedSelector]
# CPI_SELECTOR: [CPInstSelector]
# FORK_DEPTH_SELECTOR: [ForkDepthSelector]
# ML_SELECTOR: [MLSelector]
# TORCH_SELECTOR: [TorchSelector]
# RANDOM_SELECTOR: [RandomSelector]
# RANDOM_PATH_SELECTOR: [RandomPathSelector]
#
# Default value is [INHERITORS_SELECTOR]
#pathSelectorType=INHERITORS_SELECTOR

#
# Type of MLSelector recalculation.
#
# WITH_RECALCULATION: [MLSelectorWithRecalculation]
# WITHOUT_RECALCULATION: [MLSelectorWithoutRecalculation]
#
# Default value is [WITHOUT_RECALCULATION]
#mlSelectorRecalculationType=WITHOUT_RECALCULATION

#
# Type of [MLPredictor].
#
# MLP: [MultilayerPerceptronPredictor]
# LINREG: [LinearRegressionPredictor]
#
# Default value is [MLP]
#mlPredictorType=MLP

#
# Steps limit for path selector.
#
# Default value is [3500]
#pathSelectorStepsLimit=3500

#
# Determines whether path selector should save remaining states for concrete execution after stopping by strategy.
# False for all framework tests by default.
#saveRemainingStatesForConcreteExecution=true

#
# Use debug visualization.
# Set it to true if debug visualization is needed.
#
# Default value is [false]
#useDebugVisualization=false

#
# Set the value to true to show library classes' graphs in visualization.
#
# Default value is [false]
#showLibraryClassesInVisualization=false

#
# Use simplification of UtExpressions.
# Set it to false to disable expression simplification.
#
# Default value is [true]
#useExpressionSimplification=true

#
# Enable the Summarization module to generate summaries for methods under test.
# Note: if it is [SummariesGenerationType.NONE],
# all the execution for a particular method will be stored at the same nameless region.
#
# FULL: All possible analysis actions are taken
# LIGHT: Analysis actions based on sources are NOT taken
# NONE: No summaries are generated
#
# Default value is [FULL]
#summaryGenerationType=FULL

#
# If True test comments will be generated.
#
# Default value is [true]
#enableJavaDocGeneration=true

#
# If True cluster comments will be generated.
#
# Default value is [true]
#enableClusterCommentsGeneration=true

#
# If True names for tests will be generated.
#
# Default value is [true]
#enableTestNamesGeneration=true

#
# If True display names for tests will be generated.
#
# Default value is [true]
#enableDisplayNameGeneration=true

#
#  If True display name in from -> to style will be generated.
#
# Default value is [true]
#useDisplayNameArrowStyle=true

#
# Generate summaries using plugin's custom JavaDoc tags.
#
# Default value is [true]
#useCustomJavaDocTags=true

#
# This option regulates which [NullPointerException] check should be performed for nested methods.
# Set an option in true if you want to perform NPE check in the corresponding situations, otherwise set false.
#
# Default value is [true]
#checkNpeInNestedMethods=true

#
# This option regulates which [NullPointerException] check should be performed for nested not private methods.
# Set an option in true if you want to perform NPE check in the corresponding situations, otherwise set false.
#
# Default value is [false]
#checkNpeInNestedNotPrivateMethods=false

#
# This option determines whether we should generate [NullPointerException] checks for final or non-public fields
# in non-application classes. Set by true, this option highly decreases test's readability in some cases
# because of using reflection API for setting final/non-public fields in non-application classes.
# NOTE: With false value loses some executions with NPE in system classes, but often most of these executions
# are not expected by user.
#
# Default value is [false]
#maximizeCoverageUsingReflection=false

#
# Activate or deactivate substituting static fields values set in static initializer
# with symbolic variable to try to set them another value than in initializer.
#
# Default value is [true]
#substituteStaticsWithSymbolicVariable=true

#
# Use concrete execution.
#
# Default value is [true]
#useConcreteExecution=true

#
# Enable code generation tests with every possible configuration
# for every method in samples.
# Important: is enabled generation requires enormous amount of time.
#
# Default value is [false]
#checkAllCombinationsForEveryTestInSamples=false

#
# Enable transformation UtCompositeModels into UtAssembleModels using AssembleModelGenerator.
# Note: false doesn't mean that there will be no assemble models, it means that the generator will be turned off.
# Assemble models will present for lists, sets, etc.
#
# Default value is [true]
#useAssembleModelGenerator=true

#
# Test related files from the temp directory that are older than [daysLimitForTempFiles]
# will be removed at the beginning of the test run.
#
# Default value is [3]
#daysLimitForTempFiles=3

#
# Enables soft constraints in the engine.
#
# Default value is [true]
#preferredCexOption=true

#
# Type of test minimization strategy.
#
# DO_NOT_MINIMIZE_STRATEGY: Always adds new test
# COVERAGE_STRATEGY: Adds new test only if it increases coverage
#
# Default value is [COVERAGE_STRATEGY]
#testMinimizationStrategyType=COVERAGE_STRATEGY

#
# Set to true to start fuzzing if symbolic execution haven't return anything
#
# Default value is [true]
#useFuzzing=true

#
# Set the total attempts to improve coverage by fuzzer.
#
# Default value is [2147483647]
#fuzzingMaxAttempts=2147483647

#
# Fuzzer tries to generate and run tests during this time.
#
# Default value is [3000]
#fuzzingTimeoutInMillis=3000

#
# Find implementations of interfaces and abstract classes to fuzz.
#
# Default value is [true]
#fuzzingImplementationOfAbstractClasses=true

#
# Use methods to mutate fields of classes different from class under test or not.
#
# Default value is [false]
#tryMutateOtherClassesFieldsWithMethods=false

#
# Generate tests that treat possible overflows in arithmetic operations as errors
# that throw Arithmetic Exception.
#
# Default value is [false]
#treatOverflowAsError=false

#
# Generate tests that treat assertions as error suits.
#
# Default value is [true]
#treatAssertAsErrorSuite=true

#
# Instrument all classes before start
#
# Default value is [false]
#warmupConcreteExecution=false

#
# Ignore string literals during the code analysis to make possible to analyze antlr.
# It is a hack and must be removed after the competition.
#
# Default value is [false]
#ignoreStringLiterals=false

#
# Timeout for specific concrete execution (in milliseconds).
#
# Default value is [1000]
#concreteExecutionDefaultTimeoutInInstrumentedProcessMillis=1000

#
# Enable taint analysis or not.
#
# Default value is [false]
#useTaintAnalysis=false

#
# Path to custom log4j2 configuration file for EngineProcess.
# By default utbot-intellij/src/main/resources/log4j2.xml is used.
# Also default value is used if provided value is not a file.
#engineProcessLogConfigFile=""

#
# The property is useful only for the IntelliJ IDEs.
# If the property is set in true the engine process opens a debug port.
# @see runInstrumentedProcessWithDebug
# @see org.utbot.intellij.plugin.process.EngineProcess
#
# Default value is [false]
#runEngineProcessWithDebug=false

#
# The engine process JDWP agent's port of the engine process.
# A debugger attaches to the port in order to debug the process.
#
# Default value is [5005]
#engineProcessDebugPort=5005

#
# Value of the suspend mode for the JDWP agent of the engine process.
# If the value is true, the engine process will suspend until a debugger attaches to it.
#
# Default value is [true]
#suspendEngineProcessExecutionInDebugMode=true

#
# The property is useful only for the IntelliJ IDEs.
# If the property is set in true the spring analyzer process opens a debug port.
# @see runInstrumentedProcessWithDebug
# @see org.utbot.spring.process.SpringAnalyzerProcess
#
# Default value is [false]
#runSpringAnalyzerProcessWithDebug=false

#
# The spring analyzer process JDWP agent's port.
# A debugger attaches to the port in order to debug the process.
#
# Default value is [5007]
#springAnalyzerProcessDebugPort=5007

#
# Value of the suspend mode for the JDWP agent of the spring analyzer process.
# If the value is true, the spring analyzer process will suspend until a debugger attaches to it.
#
# Default value is [true]
#suspendSpringAnalyzerProcessExecutionInDebugMode=true

#
# The instrumented process JDWP agent's port of the instrumented process.
# A debugger attaches to the port in order to debug the process.
#
# Default value is [5006]
#instrumentedProcessDebugPort=5006

#
# Value of the suspend mode for the JDWP agent of the instrumented process.
# If the value is true, the instrumented process will suspend until a debugger attaches to it.
#
# Default value is [true]
#suspendInstrumentedProcessExecutionInDebugMode=true

#
# If true, runs the instrumented process with the ability to attach a debugger.
# To debug the instrumented process, set the breakpoint in the
# [org.utbot.instrumentation.rd.InstrumentedProcess.Companion.invoke]
# and in the instrumented process's main function and run the main process.
# Then run the remote JVM debug configuration in IDEA.
# If you see the message in console about successful connection, then
# the debugger is attached successfully.
# Now you can put the breakpoints in the instrumented process and debug
# both processes simultaneously.
# @see [org.utbot.instrumentation.rd.InstrumentedProcess.Companion.invoke]
#
# Default value is [false]
#runInstrumentedProcessWithDebug=false

#
# Number of branch instructions using for clustering executions in the test minimization phase.
#
# Default value is [4]
#numberOfBranchInstructionsForClustering=4

#
# Determines should we choose only one crash execution with "minimal" model or keep all.
#
# Default value is [true]
#minimizeCrashExecutions=true

#
# Determines maximum number of executions with unknown coverage per method per result type.
# In [ContestUsvm] it is useful if concrete fails, so we use symbolic execution result without trace.
#
# Default value is [10]
#maxUnknownCoverageExecutionsPerMethodPerResultType=10

#
# Enable it to calculate unsat cores for hard constraints as well.
# It may be usefull during debug.
# Note: it might highly impact performance, so do not enable it in release mode.
#
# Default value is [false]
#enableUnsatCoreCalculationForHardConstraints=false

#
# Enable it to process states with unknown solver status
# from the queue to concrete execution.
#
# Default value is [true]
#processUnknownStatesDuringConcreteExecution=true

#
# 2^{this} will be the length of observed subpath.
# See [SubpathGuidedSelector]
#
# Default value is [1]
#subpathGuidedSelectorIndex=1

#
# Flag that indicates whether feature processing for execution states enabled or not
#
# Default value is [false]
#enableFeatureProcess=false

#
# Path to deserialized ML models
#
# Default value is [../models/0]
#modelPath=../models/0

#
# Full class name of the class containing the configuration for the ML models to solve path selection task.
#
# Default value is [org.utbot.AnalyticsConfiguration]
#analyticsConfigurationClassPath=org.utbot.AnalyticsConfiguration

#
# Full class name of the class containing the configuration for the ML models exported from the PyTorch to solve path selection task.
#
# Default value is [org.utbot.AnalyticsTorchConfiguration]
#analyticsTorchConfigurationClassPath=org.utbot.AnalyticsTorchConfiguration

#
# Number of model iterations that will be used during ContestEstimator
#
# Default value is [1]
#iterations=1

#
# Path for state features dir
#
# Default value is [eval/secondFeatures/antlr/INHERITORS_SELECTOR]
#featurePath=eval/secondFeatures/antlr/INHERITORS_SELECTOR

#
# Counter for tests during testGeneration for one project in ContestEstimator
#
# Default value is [0]
#testCounter=0

#
# Flag that indicates whether tests for synthetic (see [Executable.isSynthetic]) and implicitly declared methods (like values, valueOf in enums) should be generated, or not
#
# Default value is [true]
#skipTestGenerationForSyntheticAndImplicitlyDeclaredMethods=true

#
# Flag that indicates whether should we branch on and set static fields from trusted libraries or not.
# @see [org.utbot.common.WorkaroundReason.IGNORE_STATICS_FROM_TRUSTED_LIBRARIES]
#
# Default value is [true]
#ignoreStaticsFromTrustedLibraries=true

#
# Use the sandbox in the instrumented process.
# If true, the sandbox will prevent potentially dangerous calls, e.g., file access, reading
# or modifying the environment, calls to `Unsafe` methods etc.
# If false, all these operations will be enabled and may lead to data loss during code analysis
# and test generation.
#
# Default value is [true]
#useSandbox=true

#
# Transform bytecode in the instrumented process.
# If true, bytecode transformation will help fuzzing to find interesting input data, but the size of bytecode can increase.
# If false, bytecode won`t be changed.
#
# Default value is [false]
#useBytecodeTransformation=false

#
# Limit for number of generated tests per method (in each region)
#
# Default value is [50]
#maxTestsPerMethodInRegion=50

#
# Max file length for generated test file
#
# Default value is [1000000]
#maxTestFileSize=1000000

#
# If this options set in true, all soot classes will be removed from a Soot Scene,
# therefore, you will be unable to test soot classes.
#
# Default value is [true]
#removeSootClassesFromHierarchy=true

#
# If this options set in true, all UtBot classes will be removed from a Soot Scene,
# therefore, you will be unable to test UtBot classes.
#
# Default value is [true]
#removeUtBotClassesFromHierarchy=true

#
# Use this option to enable calculation and logging of MD5 for dropped states by statistics.
# Example of such logging:
#     Dropping state (lastStatus=UNDEFINED) by the distance statistics. MD5: 5d0bccc242e87d53578ca0ef64aa5864
#
# Default value is [false]
#enableLoggingForDroppedStates=false

#
# If this option set in true, depending on the number of possible types for
# a particular object will be used either type system based on conjunction
# or on bit vectors.
# @see useBitVecBasedTypeSystem
#
# Default value is [true]
#useBitVecBasedTypeSystem=true

#
# The number of types on which the choice of the type system depends.
#
# Default value is [64]
#maxTypeNumberForEnumeration=64

#
# The threshold for numbers of types for which they will be encoded into solver.
# It is used to do not encode big type storages due to significand performance degradation.
#
# Default value is [512]
#maxNumberOfTypesToEncode=512

#
# The behaviour of further analysis if tests generation cancellation is requested.
#
# NONE: Do not react on cancellation
# CANCEL_EVERYTHING: Clear all generated test classes
# SAVE_PROCESSED_RESULTS: Show already processed test classes
#
# Default value is [SAVE_PROCESSED_RESULTS]
#cancellationStrategyType=SAVE_PROCESSED_RESULTS

#
# Depending on this option, <clinit> sections might be analyzed or not.
# Note that some clinit sections still will be initialized using runtime information.
#
# Default value is [true]
#enableClinitSectionsAnalysis=true

#
# Process all clinit sections concretely.
# If [enableClinitSectionsAnalysis] is false, it disables effect of this option as well.
# Note that values processed concretely won't be replaced with unbounded symbolic variables.
#
# Default value is [false]
#processAllClinitSectionsConcretely=false

#
# In cases where we don't have a body for a method, we can either throw an exception
# or treat this a method as a source of an unbounded symbolic variable returned as a result.
# If this option is set in true, instead of analysis we will return an unbounded symbolic
# variable with a corresponding type. Otherwise, an exception will be thrown.
# Default value is false since it is not a common situation when you cannot retrieve a body
# from a regular method. Setting this option in true might be suitable in situations when
# it is more important not to fall at all rather than work precisely.
#treatAbsentMethodsAsUnboundedValue=false

#
# A maximum size for any array in the program. Note that input arrays might be less than this value
# due to the symbolic engine limitation, see `org.utbot.engine.Traverser.softMaxArraySize`.
#
# Default value is [1024]
#maxArraySize=1024

#
# A maximum size for any array in the program. Note that input arrays might be less than this value
# due to the symbolic engine limitation, see `org.utbot.engine.Traverser.softMaxArraySize`.
#
# Default value is [false]
#disableUnsatChecking=false

#
# When generating integration tests we only partially reset context in between executions to save time.
# For example, entity id generators do not get reset. It may lead to non-reproduceable results if
# IDs leak to the output of the method under test.
# To cope with that, we rerun executions that are left after minimization, fully resetting Spring context
# between executions. However, full context reset is slow, so we use this setting to limit number of
# tests per method that are rerun with full context reset in case minimization outputs too many tests.
#
# Default value is [25]
#maxSpringContextResetsPerMethod=25

#
# Add "test method start marker" and "test method end marker" around each test, can be used to
# detect uncompilable tests and remove them.
#
# Default value is [false]
#addTestMethodMarkers=false
