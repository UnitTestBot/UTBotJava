package org.utbot.intellij.plugin.javadoc

import com.intellij.codeInsight.javadoc.JavaDocExternalFilter
import com.intellij.codeInsight.javadoc.JavaDocInfoGenerator
import com.intellij.lang.java.JavaDocumentationProvider
import com.intellij.psi.PsiDocCommentBase
import com.intellij.psi.PsiJavaDocumentedElement
import com.intellij.psi.javadoc.PsiDocComment

/**
 * To render UtBot custom JavaDoc tags correctly, we need to override the way it generates HTML tags for comments.
 * We get JavaDoc info generated by IJ platform and include sections related to UTBot,
 * each section relates to the specific JavaDoc tag.
 * It renders text, code, and links.
 */
class UtDocumentationProvider : JavaDocumentationProvider() {
    override fun generateRenderedDoc(comment: PsiDocCommentBase): String {
        var target = comment.owner
        if (target == null) target = comment
        val docComment: PsiDocComment?
        var finalJavaDoc = ""
        if (target is PsiJavaDocumentedElement) {
            docComment = target.docComment
            if (docComment != null) {
                val baseJavaDocInfoGenerator = JavaDocInfoGenerator(target.project, target)
                val baseJavaDocInfo = baseJavaDocInfoGenerator.generateRenderedDocInfo()
                val utJavaDocInfoGenerator = UtJavaDocInfoGenerator()
                val javaDocInfoWithUtSections =
                    utJavaDocInfoGenerator.addUtBotSpecificSectionsToJavaDoc(baseJavaDocInfo, docComment)
                finalJavaDoc = JavaDocExternalFilter.filterInternalDocInfo(javaDocInfoWithUtSections)!!
            }
        }
        return finalJavaDoc
    }
}