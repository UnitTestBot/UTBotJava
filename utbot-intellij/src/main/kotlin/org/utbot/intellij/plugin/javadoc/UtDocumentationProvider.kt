package org.utbot.intellij.plugin.javadoc

import com.intellij.codeInsight.javadoc.JavaDocExternalFilter
import com.intellij.codeInsight.javadoc.JavaDocInfoGenerator
import com.intellij.lang.java.JavaDocumentationProvider
import com.intellij.psi.PsiDocCommentBase
import com.intellij.psi.PsiJavaDocumentedElement

/**
 * To render UtBot custom JavaDoc tags correctly, we need to override the way it generates HTML tags for comments.
 * We get JavaDoc info generated by IJ platform and include sections related to UTBot,
 * each section relates to the specific JavaDoc tag.
 * It renders text, code, and links.
 */
class UtDocumentationProvider : JavaDocumentationProvider() {
    override fun generateRenderedDoc(comment: PsiDocCommentBase): String? {
        val target = comment.owner ?: comment

        if (target !is PsiJavaDocumentedElement) {
            return ""
        }

        val docComment = target.docComment ?: return ""

        val baseJavaDocInfoGenerator = JavaDocInfoGenerator(target.project, target)
        // get JavaDoc comment rendered by the platform.
        val baseJavaDocInfo = baseJavaDocInfoGenerator.generateRenderedDocInfo()
        val utJavaDocInfoGenerator = UtJavaDocInfoGenerator()
        // add UTBot sections with custom tags.
        val javaDocInfoWithUtSections =
            utJavaDocInfoGenerator.addUtBotSpecificSectionsToJavaDoc(baseJavaDocInfo, docComment)

        return JavaDocExternalFilter.filterInternalDocInfo(javaDocInfoWithUtSections)
    }
}